/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        
        List<List<Integer>> result = new ArrayList<>();
        
        if(root == null)
        return result;
        
        
        Queue<TreeNode> que = new LinkedList<>();
        que.add(root);
        
        while(!que.isEmpty())
        {
            
            int size = que.size();
            
            List<Integer> ls = new ArrayList<>();
            for(int i =0; i<size;i++)
            {
               TreeNode ele =  que.poll();
                if(ele.left != null)
                    que.add(ele.left);
                
                if(ele.right != null)
                    que.add(ele.right);
                
                ls.add(ele.val);
                
            }
            
            result.add(ls);
            
        }
        
        return result;
        
    }
}
