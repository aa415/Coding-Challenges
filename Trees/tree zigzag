/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        
        List<List<Integer>> result = new ArrayList<>();
        
        if(root == null)
        {
            return result;
        }
        
        boolean leftToRight = true;
        
        Queue<TreeNode> que = new LinkedList<>();
        que.add(root);
        
        while(!que.isEmpty())
        {
            int queSize = que.size();
            
             List<Integer> elementList = new ArrayList<>();
            
            for( int i =0 ;i< queSize;i++)
            {
                TreeNode element = que.poll();
                
                
                 if(element.left!=null)
                que.add(element.left);
            
                if(element.right != null)
                 que.add(element.right);
                
                if(leftToRight)
                {
                  elementList.add(element.val);  
                }
                else
                {
                   elementList.add(0,element.val);
                }
                
            }
            
             leftToRight = !leftToRight;
            result.add(elementList);
            
           
        }
        
        return result;
    }
}
