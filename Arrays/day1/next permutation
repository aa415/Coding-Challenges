class Solution {
   //iterate from end.. find brk pt where nus[i]>i+1 .. swap .. then reverse
    
    public void nextPermutation(int[] nums) {
        
        int i = nums.length-2;
        
        while(i >=0 && nums[i]>=nums[i+1]) i--;
        
        if(i>=0)
        {
            int j = nums.length-1;
            
            while(nums[i]>= nums[j]) j--;
            swap(nums ,i , j);
             
            
        }
        
        
        reverse(nums,i+1);
        
    }
    
    public static void swap(int[] nums , int index1 , int index2)
    {
        int temp = nums[index1];
        nums[index1] = nums[index2];
        nums[index2] = temp;
    }
    
    public static void reverse(int[] nums,int index)
    {
        int left = index;
        int right = nums.length-1;
        
        while(left< right)
        {
            swap(nums,left++,right--);
            
            //int temp = nums[left];
            //nums[left++] = nums[right];
            //nums[right--] = temp;
        }
    }
}
